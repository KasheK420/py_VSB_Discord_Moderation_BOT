name: Build & Push Docker Image

on:
  push:
    branches:
      - main
      - master
      - dev
      - develop
      - stage*
  workflow_dispatch:

env:
  IMAGE_NAME: vsb_bot
  REGISTRY: docker.io
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set dynamic tag from branch
        id: tag
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          TAG=""
          if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
            TAG="PROD"
          elif [[ "$BRANCH" == stage* ]]; then
            TAG="STAGE"
          elif [ "$BRANCH" = "dev" ] || [ "$BRANCH" = "develop" ]; then
            TAG="DEV"
          else
            # You can choose to fail here or create a branch-based tag.
            # For safety, we just create a sanitized branch tag and also mark as DEV.
            TAG="DEV"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "branch_tag=$(echo "$BRANCH" | tr '[:upper:]/' '[:lower:]-')" >> $GITHUB_OUTPUT
          echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare tags
        id: prep
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.DOCKERHUB_USER }}/{{IMAGE_NAME_PLACEHOLDER}}"
          # Replace placeholder with env value in bash to keep tags readable:
          IMAGE="${IMAGE/{{IMAGE_NAME_PLACEHOLDER}}/${{ env.IMAGE_NAME }}}"
          T_PROD="${IMAGE}:${{ steps.tag.outputs.tag }}"
          T_SHA="${IMAGE}:${{ steps.tag.outputs.sha }}"
          T_BRANCH="${IMAGE}:${{ steps.tag.outputs.branch_tag }}"
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "t_main=${T_PROD}" >> $GITHUB_OUTPUT
          echo "t_sha=${T_SHA}" >> $GITHUB_OUTPUT
          echo "t_branch=${T_BRANCH}" >> $GITHUB_OUTPUT

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.prep.outputs.t_main }}
            ${{ steps.prep.outputs.t_sha }}
            ${{ steps.prep.outputs.t_branch }}
          cache-from: type=registry,ref=${{ steps.prep.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.prep.outputs.image }}:buildcache,mode=max
